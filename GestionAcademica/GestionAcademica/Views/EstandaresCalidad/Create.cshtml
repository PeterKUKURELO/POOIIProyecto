@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    //deshabilita la plantilla principal
    //Layout = null;
}

@if (ViewBag.Error != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: '¡Error!',
            text: '@ViewBag.Error',
            confirmButtonText: 'Aceptar'
        });
    </script>
}


@model GestionAcademica.Models.EstandarCalidad

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <h2 class="text-primary mb-4">Crear Estándar de Calidad</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card shadow">
                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el nombre del estándar" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mt-3">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = "3", placeholder = "Ingrese una descripción detallada" })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mt-3">
                        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.Estado, (SelectList)ViewBag.lstEstado, "Seleccione el estado", new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mt-3">
                        @Html.LabelFor(model => model.FechaCreacion, htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.FechaCreacion, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.FechaLimite, htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold text-end" })
                        <div class="col-sm-4">
                            @Html.EditorFor(model => model.FechaLimite, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaLimite, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="card-footer text-end">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary ms-2" })
                </div>
            </div>
        }
    </div>
}

