@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    //deshabilita la plantilla principal
    //Layout = null;
}

@if (ViewBag.Error != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: '¡Error!',
            text: '@ViewBag.Error',
            confirmButtonText: 'Aceptar'
        });
    </script>
}


@model GestionAcademica.Models.EstandarCalidad

<div class="container mt-5">
    <h2 class="text-primary mb-4">Editar Estándar de Calidad</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <!-- Campo oculto para enviar el ID sin mostrarlo en la vista -->
        @Html.HiddenFor(model => model.IdEstandar)

        <div class="card shadow">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Nombre, "Nombre", htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el nombre del estándar" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Descripcion, "Descripción", htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = "3", placeholder = "Ingrese una descripción detallada" })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Estado, "Estado", htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.Estado, (SelectList)ViewBag.lstEstado, "Seleccione el estado", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.FechaCreacion, "Fecha de Creación", htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.FechaCreacion, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.FechaLimite, "Fecha Límite", htmlAttributes: new { @class = "col-sm-2 col-form-label fw-bold text-end" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.FechaLimite, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.FechaLimite, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="card-footer text-end">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle"></i> Guardar
                </button>
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary ms-2" })
            </div>
        </div>
    }
</div>

